##    Installing Lynis 
- sudo apt-get update
- sudo apt-get install lynis
##   Check Hardeningn Score     -- first check 
- sudo lynis audit system
- Score : 59%
- Suggestions: 47
- warningn: 2   
##    Semi-Automated Hardening
dev.sec.io  -- Playbook to harden the machine 

- download ansible and install
- downlaod dev-sec.io hardening playbook from github  
    $ ansible-galaxy install dev-sec.os-hardening
- create a playbok and apply the dev-sec.io playbook role 

## Again check the hardeningn score with lynis and manual hardeing    -- second check 

- Score : 64%
- Suggestions: 38
- warningn: 3


##  manual hardening 

-- installing iptables $ sudo apt-get install -y iptables iptables-persistent
     ---------------------------------------------------------------------------  Bash Script ---------------------------------------------
#!/bin/bash

# Flush existing rules to start clean
sudo iptables -F

# Set default chain policies
sudo iptables -P INPUT DROP
echo "Default policy set: DROP all incoming traffic"
sudo iptables -P FORWARD DROP
echo "Default policy set: DROP all forwarded traffic"
sudo iptables -P OUTPUT DROP
echo "Default policy set: DROP all outgoing traffic"

# Allow established and related connections
sudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
sudo iptables -A OUTPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
echo "Rule added: Allow established and related incoming connections"


# Allow loopback interface
sudo iptables -A INPUT -i lo -j ACCEPT
echo "Rule added: Allow all incoming traffic on loopback interface"
sudo iptables -A OUTPUT -o lo -j ACCEPT
echo "Rule added: Allow all outgoing traffic on loopback interface"

# SSH - Adjust the port if you use a non-standard port
SSH_PORT=22
sudo iptables -A INPUT -p tcp --dport $SSH_PORT -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo iptables -A OUTPUT -p tcp --sport $SSH_PORT -m conntrack --ctstate ESTABLISHED -j ACCEPT

# Allow basic internet connectivity (HTTP and HTTPS)
sudo iptables -A OUTPUT -p tcp --dport 80 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo iptables -A OUTPUT -p tcp --dport 443 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT

# Allow DNS resolution (necessary for many network interactions)
sudo iptables -A OUTPUT -p udp --dport 53 -j ACCEPT
sudo iptables -A OUTPUT -p tcp --dport 53 -j ACCEPT

# Drop invalid packets
sudo iptables -A INPUT -m state --state INVALID -j DROP
echo "Rule added: Drop all invalid packets"

# Drop packets with bogus TCP flags
sudo iptables -A INPUT -p tcp --tcp-flags ALL NONE -j DROP
echo "Rule added: Drop packets with ALL NONE TCP flags"
sudo iptables -A INPUT -p tcp --tcp-flags ALL ALL -j DROP
echo "Rule added: Drop packets with ALL ALL TCP flags"

# DDoS Protection
# Limit connections per source IP
sudo iptables -A INPUT -p tcp -m connlimit --connlimit-above 50 -j DROP
echo "DDoS Protection: Limit connections per source IP"

# Limit RST packets
sudo iptables -A INPUT -p tcp --tcp-flags RST RST -m limit --limit 2/s --limit-burst 2 -j ACCEPT
sudo iptables -A INPUT -p tcp --tcp-flags RST RST -j DROP
echo "DDoS Protection: Limit RST packets"

# Limit new TCP connections
sudo iptables -A INPUT -p tcp --syn -m limit --limit 1/s --limit-burst 3 -j ACCEPT
echo "DDoS Protection: Limit new TCP connections"

# Block Ping (ICMP Echo Requests)
sudo iptables -A INPUT -p icmp --icmp-type echo-request -j DROP
echo "Rule added: Block Ping (ICMP Echo Requests)"

# Limit ICMP requests
sudo iptables -A INPUT -p icmp -m limit --limit 1/s --limit-burst 1 -j ACCEPT
sudo iptables -A INPUT -p icmp -j DROP
echo "Rule added: Limit ICMP requests"

# Block fragmented packets
sudo iptables -A INPUT -f -j DROP
echo "Rule added: Block fragmented packets"

# Block traffic from private subnets (spoofing)
sudo iptables -A INPUT -s 10.0.0.0/8 -j DROP
sudo iptables -A INPUT -s 172.16.0.0/12 -j DROP
sudo iptables -A INPUT -s 192.168.0.0/16 -j DROP
echo "Rule added: Block traffic from private subnets (spoofing)"
echo " Saving iptable rules"

# Saving rules
sudo netfilter-persistent save
echo " Updated Iptable Rules"
sudo iptables -L -v
echo "All iptables rules have been applied successfully."

-------------------------------------------------------------------------------  End of bash Script  ---------------------------------------------
## Again check the hardeningn score with lynis and manual hardeing    -- second check 

- Score : 66%

- Suggestions: 38
- warningn: 3


## fail2ban configuration against bruteforce protection
$ sudo cp /etc/fail2ban/jail.{conf,local}

## malware scanner 
$ Install a tool like rkhunter, chkrootkit, OSSEC 
$ sudo apt install rkhunter

###############################  SSH Hrdening   #####################################

#Disable TCP Forwarding
AllowTcpForwarding no

#Set Client Alive Count Maximum
ClientAliveCountMax 2

#Disable Compression
Compression no


#Set LogLevel to VERBOSE
LogLevel VERBOSE

#Limit Maximum Authentication Attempts
MaxAuthTries 3

#Limit Maximum Open Sessions
MaxSessions 2

#Disable TCPKeepAlive
TCPKeepAlive no

#Disable X11 Forwarding
X11Forwarding no

#Disable Agent Forwarding
AllowAgentForwarding no

# 

# Change Port 
PORT = ***

#Set Banner 
$ sudo nano /etc/issue   "Authorized users only. All activity may be monitored and reported. "
$ sudo nano /etc/issue.net
$ sudo nano /etc/ssh/sshd_config

# 
$ sudo apt-get install apt-listchanges

# Set Password Expiry Dates: 
 Configure /etc/login.defs or use chage to set password expiration policies.

# Install debsums: This tool checks the integrity of installed packages.
$ sudo apt-get install debsums

# Install apt-show-versions: Useful for managing package versions.
$ sudo apt-get install apt-show-versions

# change permission of sudoers
$ sudo chmod 750 /etc/sudoers.d

# Disable USB Storage Drivers
$ echo "blacklist usb-storage" | sudo tee /etc/modprobe.d/blacklist-usbstorage.conf

# Purge Old/Removed Packages
$ sudo apt-get purge $(dpkg --list | grep '^rc' | awk '{print $2}')

# Postfix Configuration (Hide mail_name)
$ sudo postconf -e "smtpd_banner = $myhostname ESMTP"

# Disable 'VRFY' Command in Postfix
$ sudo postconf -e "disable_vrfy_command = yes"

#enable Process Accounting Install and configure process accounting tools like acct:   
$ sudo apt-get install acct

#install and enable sysstat to collect system statistics
sudo apt-get install sysstat  "sudo nano /etc/default/sysstat    > Enable=True      --------> verify logs = sar -q "

##  Hardening index : 83 [################    ]


# Set Password on GRUB Boot Loader
$ sudo nano /etc/grub.d/40_custom  "set superusers="admin"
password_pbkdf2 admin grub.pbkdf2.sha512.alpha777"


